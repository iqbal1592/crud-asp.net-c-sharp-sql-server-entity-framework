//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HRMSModel", "FK_EmpBonus_BonusType", "BonusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.BonusType), "EmpBonus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.EmpBonus), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_Employee_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.Country), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Employee), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_EmpDeduction_DeductionType", "DeductionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.DeductionType), "EmpDeduction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.EmpDeduction), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_Employee_Designation", "Designation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.Designation), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Employee), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_EmpAttendance_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Employee), "EmpAttendance", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.EmpAttendance), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_EmpBonus_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Employee), "EmpBonus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccessLayer.EmpBonus), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_EmpDeduction_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Employee), "EmpDeduction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.EmpDeduction), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_EmpLeave_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Employee), "EmpLeave", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.EmpLeave), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_EmpLeave_LeaveType", "LeaveType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LeaveType), "EmpLeave", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.EmpLeave), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_Employee_EmployeeType", "EmployeeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.EmployeeType), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.Employee), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_EmpSalary_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Employee), "EmpSalary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.EmpSalary), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_EmpLoan_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.Employee), "EmpLoan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.EmpLoan), true)]
[assembly: EdmRelationshipAttribute("HRMSModel", "FK_EmpLoan_LoanType", "LoanType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccessLayer.LoanType), "EmpLoan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccessLayer.EmpLoan), true)]

#endregion

namespace DataAccessLayer
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HRMSEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HRMSEntities object using the connection string found in the 'HRMSEntities' section of the application configuration file.
        /// </summary>
        public HRMSEntities() : base("name=HRMSEntities", "HRMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HRMSEntities object.
        /// </summary>
        public HRMSEntities(string connectionString) : base(connectionString, "HRMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HRMSEntities object.
        /// </summary>
        public HRMSEntities(EntityConnection connection) : base(connection, "HRMSEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BonusType> BonusType
        {
            get
            {
                if ((_BonusType == null))
                {
                    _BonusType = base.CreateObjectSet<BonusType>("BonusType");
                }
                return _BonusType;
            }
        }
        private ObjectSet<BonusType> _BonusType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Country> Country
        {
            get
            {
                if ((_Country == null))
                {
                    _Country = base.CreateObjectSet<Country>("Country");
                }
                return _Country;
            }
        }
        private ObjectSet<Country> _Country;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeductionType> DeductionType
        {
            get
            {
                if ((_DeductionType == null))
                {
                    _DeductionType = base.CreateObjectSet<DeductionType>("DeductionType");
                }
                return _DeductionType;
            }
        }
        private ObjectSet<DeductionType> _DeductionType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Designation> Designation
        {
            get
            {
                if ((_Designation == null))
                {
                    _Designation = base.CreateObjectSet<Designation>("Designation");
                }
                return _Designation;
            }
        }
        private ObjectSet<Designation> _Designation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpAttendance> EmpAttendance
        {
            get
            {
                if ((_EmpAttendance == null))
                {
                    _EmpAttendance = base.CreateObjectSet<EmpAttendance>("EmpAttendance");
                }
                return _EmpAttendance;
            }
        }
        private ObjectSet<EmpAttendance> _EmpAttendance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpBonus> EmpBonus
        {
            get
            {
                if ((_EmpBonus == null))
                {
                    _EmpBonus = base.CreateObjectSet<EmpBonus>("EmpBonus");
                }
                return _EmpBonus;
            }
        }
        private ObjectSet<EmpBonus> _EmpBonus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpDeduction> EmpDeduction
        {
            get
            {
                if ((_EmpDeduction == null))
                {
                    _EmpDeduction = base.CreateObjectSet<EmpDeduction>("EmpDeduction");
                }
                return _EmpDeduction;
            }
        }
        private ObjectSet<EmpDeduction> _EmpDeduction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpLeave> EmpLeave
        {
            get
            {
                if ((_EmpLeave == null))
                {
                    _EmpLeave = base.CreateObjectSet<EmpLeave>("EmpLeave");
                }
                return _EmpLeave;
            }
        }
        private ObjectSet<EmpLeave> _EmpLeave;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employee
        {
            get
            {
                if ((_Employee == null))
                {
                    _Employee = base.CreateObjectSet<Employee>("Employee");
                }
                return _Employee;
            }
        }
        private ObjectSet<Employee> _Employee;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeType> EmployeeType
        {
            get
            {
                if ((_EmployeeType == null))
                {
                    _EmployeeType = base.CreateObjectSet<EmployeeType>("EmployeeType");
                }
                return _EmployeeType;
            }
        }
        private ObjectSet<EmployeeType> _EmployeeType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpSalary> EmpSalary
        {
            get
            {
                if ((_EmpSalary == null))
                {
                    _EmpSalary = base.CreateObjectSet<EmpSalary>("EmpSalary");
                }
                return _EmpSalary;
            }
        }
        private ObjectSet<EmpSalary> _EmpSalary;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaveType> LeaveType
        {
            get
            {
                if ((_LeaveType == null))
                {
                    _LeaveType = base.CreateObjectSet<LeaveType>("LeaveType");
                }
                return _LeaveType;
            }
        }
        private ObjectSet<LeaveType> _LeaveType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LoanType> LoanType
        {
            get
            {
                if ((_LoanType == null))
                {
                    _LoanType = base.CreateObjectSet<LoanType>("LoanType");
                }
                return _LoanType;
            }
        }
        private ObjectSet<LoanType> _LoanType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpLoan> EmpLoan
        {
            get
            {
                if ((_EmpLoan == null))
                {
                    _EmpLoan = base.CreateObjectSet<EmpLoan>("EmpLoan");
                }
                return _EmpLoan;
            }
        }
        private ObjectSet<EmpLoan> _EmpLoan;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BonusType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBonusType(BonusType bonusType)
        {
            base.AddObject("BonusType", bonusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Country EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountry(Country country)
        {
            base.AddObject("Country", country);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeductionType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeductionType(DeductionType deductionType)
        {
            base.AddObject("DeductionType", deductionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Designation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDesignation(Designation designation)
        {
            base.AddObject("Designation", designation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpAttendance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpAttendance(EmpAttendance empAttendance)
        {
            base.AddObject("EmpAttendance", empAttendance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpBonus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpBonus(EmpBonus empBonus)
        {
            base.AddObject("EmpBonus", empBonus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpDeduction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpDeduction(EmpDeduction empDeduction)
        {
            base.AddObject("EmpDeduction", empDeduction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpLeave EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpLeave(EmpLeave empLeave)
        {
            base.AddObject("EmpLeave", empLeave);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployee(Employee employee)
        {
            base.AddObject("Employee", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeType(EmployeeType employeeType)
        {
            base.AddObject("EmployeeType", employeeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpSalary EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpSalary(EmpSalary empSalary)
        {
            base.AddObject("EmpSalary", empSalary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaveType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaveType(LeaveType leaveType)
        {
            base.AddObject("LeaveType", leaveType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LoanType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLoanType(LoanType loanType)
        {
            base.AddObject("LoanType", loanType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpLoan EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpLoan(EmpLoan empLoan)
        {
            base.AddObject("EmpLoan", empLoan);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="BonusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BonusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BonusType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BonusType CreateBonusType(global::System.Int32 id, global::System.String name)
        {
            BonusType bonusType = new BonusType();
            bonusType.Id = id;
            bonusType.Name = name;
            return bonusType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpBonus_BonusType", "EmpBonus")]
        public EntityCollection<EmpBonus> EmpBonus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpBonus>("HRMSModel.FK_EmpBonus_BonusType", "EmpBonus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpBonus>("HRMSModel.FK_EmpBonus_BonusType", "EmpBonus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Country object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Country CreateCountry(global::System.Int32 id, global::System.String name)
        {
            Country country = new Country();
            country.Id = id;
            country.Name = name;
            return country;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_Employee_Country", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("HRMSModel.FK_Employee_Country", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("HRMSModel.FK_Employee_Country", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="DeductionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeductionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeductionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DeductionType CreateDeductionType(global::System.Int32 id, global::System.String name)
        {
            DeductionType deductionType = new DeductionType();
            deductionType.Id = id;
            deductionType.Name = name;
            return deductionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpDeduction_DeductionType", "EmpDeduction")]
        public EntityCollection<EmpDeduction> EmpDeduction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpDeduction>("HRMSModel.FK_EmpDeduction_DeductionType", "EmpDeduction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpDeduction>("HRMSModel.FK_EmpDeduction_DeductionType", "EmpDeduction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="Designation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Designation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Designation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Designation CreateDesignation(global::System.Int32 id, global::System.String name)
        {
            Designation designation = new Designation();
            designation.Id = id;
            designation.Name = name;
            return designation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_Employee_Designation", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("HRMSModel.FK_Employee_Designation", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("HRMSModel.FK_Employee_Designation", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="EmpAttendance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpAttendance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpAttendance object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="empId">Initial value of the EmpId property.</param>
        public static EmpAttendance CreateEmpAttendance(global::System.Int32 id, global::System.DateTime date, global::System.Int32 empId)
        {
            EmpAttendance empAttendance = new EmpAttendance();
            empAttendance.Id = id;
            empAttendance.Date = date;
            empAttendance.EmpId = empId;
            return empAttendance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpId
        {
            get
            {
                return _EmpId;
            }
            set
            {
                OnEmpIdChanging(value);
                ReportPropertyChanging("EmpId");
                _EmpId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpId");
                OnEmpIdChanged();
            }
        }
        private global::System.Int32 _EmpId;
        partial void OnEmpIdChanging(global::System.Int32 value);
        partial void OnEmpIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpAttendance_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpAttendance_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpAttendance_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpAttendance_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HRMSModel.FK_EmpAttendance_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="EmpBonus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpBonus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpBonus object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="empId">Initial value of the EmpId property.</param>
        /// <param name="bonusType">Initial value of the BonusType property.</param>
        /// <param name="dateApproved">Initial value of the DateApproved property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static EmpBonus CreateEmpBonus(global::System.Int32 id, global::System.Int32 empId, global::System.Int32 bonusType, global::System.DateTime dateApproved, global::System.Double amount)
        {
            EmpBonus empBonus = new EmpBonus();
            empBonus.Id = id;
            empBonus.EmpId = empId;
            empBonus.BonusType = bonusType;
            empBonus.DateApproved = dateApproved;
            empBonus.Amount = amount;
            return empBonus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpId
        {
            get
            {
                return _EmpId;
            }
            set
            {
                OnEmpIdChanging(value);
                ReportPropertyChanging("EmpId");
                _EmpId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpId");
                OnEmpIdChanged();
            }
        }
        private global::System.Int32 _EmpId;
        partial void OnEmpIdChanging(global::System.Int32 value);
        partial void OnEmpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BonusType
        {
            get
            {
                return _BonusType;
            }
            set
            {
                OnBonusTypeChanging(value);
                ReportPropertyChanging("BonusType");
                _BonusType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusType");
                OnBonusTypeChanged();
            }
        }
        private global::System.Int32 _BonusType;
        partial void OnBonusTypeChanging(global::System.Int32 value);
        partial void OnBonusTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateApproved
        {
            get
            {
                return _DateApproved;
            }
            set
            {
                OnDateApprovedChanging(value);
                ReportPropertyChanging("DateApproved");
                _DateApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateApproved");
                OnDateApprovedChanged();
            }
        }
        private global::System.DateTime _DateApproved;
        partial void OnDateApprovedChanging(global::System.DateTime value);
        partial void OnDateApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpBonus_BonusType", "BonusType")]
        public BonusType BonusType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("HRMSModel.FK_EmpBonus_BonusType", "BonusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("HRMSModel.FK_EmpBonus_BonusType", "BonusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BonusType> BonusType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BonusType>("HRMSModel.FK_EmpBonus_BonusType", "BonusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BonusType>("HRMSModel.FK_EmpBonus_BonusType", "BonusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpBonus_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpBonus_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpBonus_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpBonus_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HRMSModel.FK_EmpBonus_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="EmpDeduction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpDeduction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpDeduction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="empId">Initial value of the EmpId property.</param>
        /// <param name="deductionType">Initial value of the DeductionType property.</param>
        /// <param name="deductionDate">Initial value of the DeductionDate property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static EmpDeduction CreateEmpDeduction(global::System.Int32 id, global::System.Int32 empId, global::System.Int32 deductionType, global::System.DateTime deductionDate, global::System.Double amount)
        {
            EmpDeduction empDeduction = new EmpDeduction();
            empDeduction.Id = id;
            empDeduction.EmpId = empId;
            empDeduction.DeductionType = deductionType;
            empDeduction.DeductionDate = deductionDate;
            empDeduction.Amount = amount;
            return empDeduction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpId
        {
            get
            {
                return _EmpId;
            }
            set
            {
                OnEmpIdChanging(value);
                ReportPropertyChanging("EmpId");
                _EmpId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpId");
                OnEmpIdChanged();
            }
        }
        private global::System.Int32 _EmpId;
        partial void OnEmpIdChanging(global::System.Int32 value);
        partial void OnEmpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeductionType
        {
            get
            {
                return _DeductionType;
            }
            set
            {
                OnDeductionTypeChanging(value);
                ReportPropertyChanging("DeductionType");
                _DeductionType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeductionType");
                OnDeductionTypeChanged();
            }
        }
        private global::System.Int32 _DeductionType;
        partial void OnDeductionTypeChanging(global::System.Int32 value);
        partial void OnDeductionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DeductionDate
        {
            get
            {
                return _DeductionDate;
            }
            set
            {
                OnDeductionDateChanging(value);
                ReportPropertyChanging("DeductionDate");
                _DeductionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeductionDate");
                OnDeductionDateChanged();
            }
        }
        private global::System.DateTime _DeductionDate;
        partial void OnDeductionDateChanging(global::System.DateTime value);
        partial void OnDeductionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpDeduction_DeductionType", "DeductionType")]
        public DeductionType DeductionType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeductionType>("HRMSModel.FK_EmpDeduction_DeductionType", "DeductionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeductionType>("HRMSModel.FK_EmpDeduction_DeductionType", "DeductionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DeductionType> DeductionType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DeductionType>("HRMSModel.FK_EmpDeduction_DeductionType", "DeductionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DeductionType>("HRMSModel.FK_EmpDeduction_DeductionType", "DeductionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpDeduction_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpDeduction_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpDeduction_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpDeduction_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HRMSModel.FK_EmpDeduction_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="EmpLeave")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpLeave : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpLeave object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="empId">Initial value of the EmpId property.</param>
        /// <param name="leaveTypeId">Initial value of the LeaveTypeId property.</param>
        /// <param name="dateFrom">Initial value of the DateFrom property.</param>
        /// <param name="dateTo">Initial value of the DateTo property.</param>
        public static EmpLeave CreateEmpLeave(global::System.Int32 id, global::System.Int32 empId, global::System.Int32 leaveTypeId, global::System.DateTime dateFrom, global::System.DateTime dateTo)
        {
            EmpLeave empLeave = new EmpLeave();
            empLeave.Id = id;
            empLeave.EmpId = empId;
            empLeave.LeaveTypeId = leaveTypeId;
            empLeave.DateFrom = dateFrom;
            empLeave.DateTo = dateTo;
            return empLeave;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpId
        {
            get
            {
                return _EmpId;
            }
            set
            {
                OnEmpIdChanging(value);
                ReportPropertyChanging("EmpId");
                _EmpId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpId");
                OnEmpIdChanged();
            }
        }
        private global::System.Int32 _EmpId;
        partial void OnEmpIdChanging(global::System.Int32 value);
        partial void OnEmpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaveTypeId
        {
            get
            {
                return _LeaveTypeId;
            }
            set
            {
                OnLeaveTypeIdChanging(value);
                ReportPropertyChanging("LeaveTypeId");
                _LeaveTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaveTypeId");
                OnLeaveTypeIdChanged();
            }
        }
        private global::System.Int32 _LeaveTypeId;
        partial void OnLeaveTypeIdChanging(global::System.Int32 value);
        partial void OnLeaveTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateFrom
        {
            get
            {
                return _DateFrom;
            }
            set
            {
                OnDateFromChanging(value);
                ReportPropertyChanging("DateFrom");
                _DateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFrom");
                OnDateFromChanged();
            }
        }
        private global::System.DateTime _DateFrom;
        partial void OnDateFromChanging(global::System.DateTime value);
        partial void OnDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTo
        {
            get
            {
                return _DateTo;
            }
            set
            {
                OnDateToChanging(value);
                ReportPropertyChanging("DateTo");
                _DateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTo");
                OnDateToChanged();
            }
        }
        private global::System.DateTime _DateTo;
        partial void OnDateToChanging(global::System.DateTime value);
        partial void OnDateToChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpLeave_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpLeave_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpLeave_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpLeave_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HRMSModel.FK_EmpLeave_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpLeave_LeaveType", "LeaveType")]
        public LeaveType LeaveType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaveType>("HRMSModel.FK_EmpLeave_LeaveType", "LeaveType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaveType>("HRMSModel.FK_EmpLeave_LeaveType", "LeaveType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeaveType> LeaveTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaveType>("HRMSModel.FK_EmpLeave_LeaveType", "LeaveType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeaveType>("HRMSModel.FK_EmpLeave_LeaveType", "LeaveType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="EmpLoan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpLoan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpLoan object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="empId">Initial value of the EmpId property.</param>
        /// <param name="loanDate">Initial value of the LoanDate property.</param>
        /// <param name="loanTypeId">Initial value of the LoanTypeId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static EmpLoan CreateEmpLoan(global::System.Int32 id, global::System.Int32 empId, global::System.DateTime loanDate, global::System.Int32 loanTypeId, global::System.Double amount)
        {
            EmpLoan empLoan = new EmpLoan();
            empLoan.Id = id;
            empLoan.EmpId = empId;
            empLoan.LoanDate = loanDate;
            empLoan.LoanTypeId = loanTypeId;
            empLoan.Amount = amount;
            return empLoan;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpId
        {
            get
            {
                return _EmpId;
            }
            set
            {
                OnEmpIdChanging(value);
                ReportPropertyChanging("EmpId");
                _EmpId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpId");
                OnEmpIdChanged();
            }
        }
        private global::System.Int32 _EmpId;
        partial void OnEmpIdChanging(global::System.Int32 value);
        partial void OnEmpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoanDate
        {
            get
            {
                return _LoanDate;
            }
            set
            {
                OnLoanDateChanging(value);
                ReportPropertyChanging("LoanDate");
                _LoanDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanDate");
                OnLoanDateChanged();
            }
        }
        private global::System.DateTime _LoanDate;
        partial void OnLoanDateChanging(global::System.DateTime value);
        partial void OnLoanDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LoanTypeId
        {
            get
            {
                return _LoanTypeId;
            }
            set
            {
                OnLoanTypeIdChanging(value);
                ReportPropertyChanging("LoanTypeId");
                _LoanTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoanTypeId");
                OnLoanTypeIdChanged();
            }
        }
        private global::System.Int32 _LoanTypeId;
        partial void OnLoanTypeIdChanging(global::System.Int32 value);
        partial void OnLoanTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpLoan_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpLoan_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpLoan_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpLoan_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HRMSModel.FK_EmpLoan_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpLoan_LoanType", "LoanType")]
        public LoanType LoanType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanType>("HRMSModel.FK_EmpLoan_LoanType", "LoanType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanType>("HRMSModel.FK_EmpLoan_LoanType", "LoanType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LoanType> LoanTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LoanType>("HRMSModel.FK_EmpLoan_LoanType", "LoanType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LoanType>("HRMSModel.FK_EmpLoan_LoanType", "LoanType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="empTypeId">Initial value of the EmpTypeId property.</param>
        public static Employee CreateEmployee(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.Boolean isActive, global::System.Int32 empTypeId)
        {
            Employee employee = new Employee();
            employee.Id = id;
            employee.FirstName = firstName;
            employee.LastName = lastName;
            employee.IsActive = isActive;
            employee.EmpTypeId = empTypeId;
            return employee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpTypeId
        {
            get
            {
                return _EmpTypeId;
            }
            set
            {
                OnEmpTypeIdChanging(value);
                ReportPropertyChanging("EmpTypeId");
                _EmpTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpTypeId");
                OnEmpTypeIdChanged();
            }
        }
        private global::System.Int32 _EmpTypeId;
        partial void OnEmpTypeIdChanging(global::System.Int32 value);
        partial void OnEmpTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DesignationId
        {
            get
            {
                return _DesignationId;
            }
            set
            {
                OnDesignationIdChanging(value);
                ReportPropertyChanging("DesignationId");
                _DesignationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DesignationId");
                OnDesignationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DesignationId;
        partial void OnDesignationIdChanging(Nullable<global::System.Int32> value);
        partial void OnDesignationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private Nullable<global::System.Int32> _Country;
        partial void OnCountryChanging(Nullable<global::System.Int32> value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PassportNo
        {
            get
            {
                return _PassportNo;
            }
            set
            {
                OnPassportNoChanging(value);
                ReportPropertyChanging("PassportNo");
                _PassportNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PassportNo");
                OnPassportNoChanged();
            }
        }
        private global::System.String _PassportNo;
        partial void OnPassportNoChanging(global::System.String value);
        partial void OnPassportNoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_Employee_Country", "Country")]
        public Country Country1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("HRMSModel.FK_Employee_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("HRMSModel.FK_Employee_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> Country1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("HRMSModel.FK_Employee_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("HRMSModel.FK_Employee_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_Employee_Designation", "Designation")]
        public Designation Designation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Designation>("HRMSModel.FK_Employee_Designation", "Designation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Designation>("HRMSModel.FK_Employee_Designation", "Designation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Designation> DesignationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Designation>("HRMSModel.FK_Employee_Designation", "Designation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Designation>("HRMSModel.FK_Employee_Designation", "Designation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpAttendance_Employee", "EmpAttendance")]
        public EmpAttendance EmpAttendance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpAttendance>("HRMSModel.FK_EmpAttendance_Employee", "EmpAttendance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpAttendance>("HRMSModel.FK_EmpAttendance_Employee", "EmpAttendance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmpAttendance> EmpAttendanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpAttendance>("HRMSModel.FK_EmpAttendance_Employee", "EmpAttendance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmpAttendance>("HRMSModel.FK_EmpAttendance_Employee", "EmpAttendance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpBonus_Employee", "EmpBonus")]
        public EmpBonus EmpBonus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpBonus>("HRMSModel.FK_EmpBonus_Employee", "EmpBonus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpBonus>("HRMSModel.FK_EmpBonus_Employee", "EmpBonus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmpBonus> EmpBonusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpBonus>("HRMSModel.FK_EmpBonus_Employee", "EmpBonus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmpBonus>("HRMSModel.FK_EmpBonus_Employee", "EmpBonus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpDeduction_Employee", "EmpDeduction")]
        public EntityCollection<EmpDeduction> EmpDeduction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpDeduction>("HRMSModel.FK_EmpDeduction_Employee", "EmpDeduction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpDeduction>("HRMSModel.FK_EmpDeduction_Employee", "EmpDeduction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpLeave_Employee", "EmpLeave")]
        public EntityCollection<EmpLeave> EmpLeave
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpLeave>("HRMSModel.FK_EmpLeave_Employee", "EmpLeave");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpLeave>("HRMSModel.FK_EmpLeave_Employee", "EmpLeave", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_Employee_EmployeeType", "EmployeeType")]
        public EmployeeType EmployeeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("HRMSModel.FK_Employee_EmployeeType", "EmployeeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("HRMSModel.FK_Employee_EmployeeType", "EmployeeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeType> EmployeeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeType>("HRMSModel.FK_Employee_EmployeeType", "EmployeeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeType>("HRMSModel.FK_Employee_EmployeeType", "EmployeeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpSalary_Employee", "EmpSalary")]
        public EntityCollection<EmpSalary> EmpSalary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpSalary>("HRMSModel.FK_EmpSalary_Employee", "EmpSalary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpSalary>("HRMSModel.FK_EmpSalary_Employee", "EmpSalary", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpLoan_Employee", "EmpLoan")]
        public EntityCollection<EmpLoan> EmpLoan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpLoan>("HRMSModel.FK_EmpLoan_Employee", "EmpLoan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpLoan>("HRMSModel.FK_EmpLoan_Employee", "EmpLoan", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="EmployeeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EmployeeType CreateEmployeeType(global::System.Int32 id, global::System.String name)
        {
            EmployeeType employeeType = new EmployeeType();
            employeeType.Id = id;
            employeeType.Name = name;
            return employeeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_Employee_EmployeeType", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("HRMSModel.FK_Employee_EmployeeType", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("HRMSModel.FK_Employee_EmployeeType", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="EmpSalary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpSalary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpSalary object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="empId">Initial value of the EmpId property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static EmpSalary CreateEmpSalary(global::System.Int32 id, global::System.Int32 empId, global::System.Int32 month, global::System.Int32 year, global::System.Double amount)
        {
            EmpSalary empSalary = new EmpSalary();
            empSalary.Id = id;
            empSalary.EmpId = empId;
            empSalary.Month = month;
            empSalary.Year = year;
            empSalary.Amount = amount;
            return empSalary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmpId
        {
            get
            {
                return _EmpId;
            }
            set
            {
                OnEmpIdChanging(value);
                ReportPropertyChanging("EmpId");
                _EmpId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpId");
                OnEmpIdChanged();
            }
        }
        private global::System.Int32 _EmpId;
        partial void OnEmpIdChanging(global::System.Int32 value);
        partial void OnEmpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpSalary_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpSalary_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpSalary_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("HRMSModel.FK_EmpSalary_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("HRMSModel.FK_EmpSalary_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="LeaveType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaveType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaveType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LeaveType CreateLeaveType(global::System.Int32 id, global::System.String name)
        {
            LeaveType leaveType = new LeaveType();
            leaveType.Id = id;
            leaveType.Name = name;
            return leaveType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpLeave_LeaveType", "EmpLeave")]
        public EntityCollection<EmpLeave> EmpLeave
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpLeave>("HRMSModel.FK_EmpLeave_LeaveType", "EmpLeave");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpLeave>("HRMSModel.FK_EmpLeave_LeaveType", "EmpLeave", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HRMSModel", Name="LoanType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LoanType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LoanType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static LoanType CreateLoanType(global::System.Int32 id, global::System.String name)
        {
            LoanType loanType = new LoanType();
            loanType.Id = id;
            loanType.Name = name;
            return loanType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HRMSModel", "FK_EmpLoan_LoanType", "EmpLoan")]
        public EntityCollection<EmpLoan> EmpLoan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpLoan>("HRMSModel.FK_EmpLoan_LoanType", "EmpLoan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpLoan>("HRMSModel.FK_EmpLoan_LoanType", "EmpLoan", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
